a := 'bla'
assert(a is 'bla')
assert(!(a is 'yeet'))
assert(not(a is 'yeet'))
assert(a is not 'yeet')
assert(!(a is not 'yeet') == false)
assert(not(a is not 'yeet') == false)

assert(a is ! 'yeet') // Weird but valid.
assert(a is! 'something') // Weird but valid.
// assert(a !is 'something') // Invalid (and also weird).

assert(not false)
assert(!false)
assert(!!true)
assert(not not true)

assert toBool(false) is false
assert toBool('') is false
assert toBool(0) is false
assert toBool(null) is false
assert toBool([]) is false
assert toBool({}) is false
assert toBool(#{}) is false

assert toBool(true) is true
assert toBool('hi') is true
assert toBool(12) is true
assert toBool([1, 2, 3]) is true
assert toBool({a: 1}) is true
assert toBool(#{1, 2, 'three'}) is true

assert typeof(false) is 'bool'
assert typeof(true) is 'bool'

assert typeof('false') is 'string'

assert((true && false) == false)
assert((true && true) == true)
assert((false && false) == false)
assert((false && true) == false)

assert((true || false) == true)
assert((false || true) == true)
assert((false || false) == false)
assert((true || true) == true)

assert((true and false) is false)
assert((true and true) is true)
assert((false and false) is false)
assert((false and true) is false)

assert((true or false) is true)
assert((false or true) is true)
assert((false or false) is false)
assert((true or true) is true)

println('Passed!')